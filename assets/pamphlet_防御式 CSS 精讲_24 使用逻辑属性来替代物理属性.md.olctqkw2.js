import{_ as s,c as i,o as a,a2 as n}from"./chunks/framework.D8Prfz4N.js";const E=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"pamphlet/防御式 CSS 精讲/24 使用逻辑属性来替代物理属性.md","filePath":"pamphlet/防御式 CSS 精讲/24 使用逻辑属性来替代物理属性.md"}'),e={name:"pamphlet/防御式 CSS 精讲/24 使用逻辑属性来替代物理属性.md"},t=n(`<p>CSS 中有很多功能模块是带有方向性的，比如<strong>文本对齐</strong> 、<strong>浮动</strong> 、<strong>定位</strong>和<strong>框对齐</strong> 等，它们有着 TRBL 的顺序规则（即 <code>top</code> 、<code>right</code> 、<code>bottom</code> 和 <code>left</code>）。这些带有方向性的属性或值常会出现在你的 CSS 代码中。</p><p>假设你正在开发一个多语 Web 应用或网站，那么这些带有方向性的属性或值就很有可能给你的应用带来很多麻烦。主要原因是 Web 开发者习惯性在代码中使用 CSS 的物理属性。</p><p>换句话说，如果你正在或开发一个多语言版本 Web 应用或网站时，应该使用 CSS 逻辑属性，它能帮助你开发一个更健壮、更灵活的应用，减少不必要的麻烦。接下来，我们就围绕着这方面的话题来展开。</p><h2 id="多语言-web-应用" tabindex="-1">多语言 Web 应用 <a class="header-anchor" href="#多语言-web-应用" aria-label="Permalink to &quot;多语言 Web 应用&quot;">​</a></h2><p>世界上有很多种语言（简称<a href="https://zh.wikipedia.org/wiki/%E4%B8%96%E7%95%8C%E8%AA%9E%E8%A8%80" target="_blank" rel="noreferrer">世界语言</a>），比如汉语、英语、印度斯坦语、西班牙语、阿拉伯语、俄语、葡萄牙语、德语和法语等。</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/51e29b8cc09b4a0d9a7580af62175423~tplv-k3u1fbpfcp-zoom-1.image" alt="img"></p><p>为每一种语言都提供相应的 UI 界面的应用，称为<strong>多语言 Web 应用</strong>或<strong>多语言 Web 网站</strong> 。例如 Facebook 就是这样的一个应用：</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/0290c973ac624be29592eb7ac794aa7c~tplv-k3u1fbpfcp-zoom-1.image" alt="img"></p><p>虽然世界语言有很多种类型，但它们大致可为分为三大类：</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ab99b02dba9f4ff0bb8634f8582647a1~tplv-k3u1fbpfcp-zoom-1.image" alt="img"></p><ul><li>汉语体系，比如中文、日文和韩文等；</li><li>拉丁语体系，比如英语、德语和法语等；</li><li>阿拉伯语体系，比如阿拉伯语和希伯来语等。</li></ul><h2 id="与语言相匹配的书写模式和阅读模式" tabindex="-1">与语言相匹配的书写模式和阅读模式 <a class="header-anchor" href="#与语言相匹配的书写模式和阅读模式" aria-label="Permalink to &quot;与语言相匹配的书写模式和阅读模式&quot;">​</a></h2><p>每一种语言体系都有着自己的书写模式和阅读模式，比如汉语体系和拉丁语体系的书写模式和阅读模式是从左到右，即 <strong>LTR</strong> (Left-To-Right)；阿拉伯语体系的书写模式和阅读模式刚好与其相反，是从右到左，即 <strong>RTL</strong> (Right-To-Left)。其中汉语体系有时候还有垂直模式，即竖排。</p><p>有意思的是，在 HTML 和 CSS 中都有着相应的特性，可以对应着不同语言体系的书写模式和阅读模式。比如，在 HTML 中，我们可以在元素标签上使用 <code>dir</code> 属性来指定它们：</p><ul><li><code>dir=&quot;ltr&quot;</code> ：对应着 LTR 模式，汉语体系和拉丁语体系都是这种模式；</li><li><code>dir=&quot;rtl&quot;</code> ：对应着 RTL 模式，阿拉伯语体系都是该模式。</li></ul><div class="language-HTML vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">HTML</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!-- RTL --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">html</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> lang</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ar&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> dir</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;rtl&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">body</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;مياه للجميع، مستقبل مشترك&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">body</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">html</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!-- LTR --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">html</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> lang</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;zh&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> dir</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ltr&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">body</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;人人有水、共享未来&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">body</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">html</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>CSS 中的 <code>direction</code> 和 HTML 的 <code>dir</code> 是完全相同的。我们可以在 CSS 中使用 <code>direction</code> 来改为阅读模式，比如：</p><div class="language-CSS vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">CSS</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lang</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ar&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    direction</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">rtl</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lange</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;zh&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    direction</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ltr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d1d86deacff24b33beb26934740eb60b~tplv-k3u1fbpfcp-zoom-1.image" alt="img"></p><p>汉语、日语、韩语和蒙古语既可以从左到右水平书写，也可以从上到下垂直书写。大多数这些语言的网站都是水平的，和英语一样。</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/35394dbb900d4766a7793d4df944e8f2~tplv-k3u1fbpfcp-zoom-1.image" alt="img"></p><p>相比之下，垂直书写在日本网站上更为常见。有些网站同时使用垂直和水平文本。</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/2719a78dfa92476c8fa7ff148ede6476~tplv-k3u1fbpfcp-zoom-1.image" alt="img"></p><blockquote><p>URL: <a href="http://www.baroku.co.jp/" target="_blank" rel="noreferrer">http://www.baroku.co.jp/</a></p></blockquote><p>对于垂直书写（从上到下且从右到左或从上到下且从左到右）模式，HTML 的 <code>dir</code> 和 CSS 的 <code>direction</code> 是无法实现的。庆幸的是，CSS 中有一个名为书写模式的模块，即 <code>writting-mode</code> ，它可以做到：</p><ul><li><strong><code>horizontal-tb</code></strong> ：定义了内容从左到右水平流动（内联流），从上到下垂直流动（块流）。下一条水平线位于上一条线下方；</li><li><strong><code>vertical-rl</code></strong> ：定义了内容从上到下垂直流动（内联流），从右到左水平流动（块流）。下一条垂直线位于上一行的左侧；</li><li><strong><code>vertical-lr</code></strong> ：定义了内容从上到下垂直流动（内联流），从左到右水平流动 （块流）。下一条垂直线位于上一行的右侧；</li><li><strong><code>sideways-rl</code></strong> ：定义了内容从上到下垂直流动，所有字形，甚至是垂直脚本中的字形，都设置在右侧；</li><li><strong><code>sideways-lr</code></strong> ：内容从上到下垂直流动，所有字形，甚至是垂直脚本中的字形，都设置在左侧。</li></ul><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/db100c776ddc4fd293ffbfe9a1f7edd5~tplv-k3u1fbpfcp-zoom-1.image" alt="img"></p><blockquote><p>Demo 地址：<a href="https://codepen.io/airen/full/rNZbYbe" target="_blank" rel="noreferrer">https://codepen.io/airen/full/rNZbYbe</a></p></blockquote><p>这里所说的块流和文本流，主要指的是 HTML 块元素的流动方向和文本内容的流动方向，其中文本流也常称“内联方向”：</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7436f5b7938942908cf48f739d95a34c~tplv-k3u1fbpfcp-zoom-1.image" alt="img"></p><p>在 Web 中除了文档有流方向一说之外，对于文本同样有流的概念，比如说英文，一般是从左到右，阿拉伯文是从右到左，而日文（古代的中文）从上到下，从右到左：</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c67fd09e6af34c6084fc8cf248fea004~tplv-k3u1fbpfcp-zoom-1.image" alt="img"></p><p>不管是文档流还是文本流，它们都具有相应的物理特性，比如从左到右，从右到左，从上到下，从下到上。即，它们都没有离开 <code>top</code>、<code>right</code>、<code>bottom</code> 和 <code>left</code> 方向。这也是 CSS 中为什么有那么多属性和值都与方向有着紧密联系的原因所在。比如：</p><ul><li><code>text-align</code> 属性：用于指定文本的对齐方式，属性值包括 <code>left</code>（左对齐）、<code>right</code>（右对齐）和 <code>center</code>（居中对齐）。</li><li><code>vertical-align</code> 属性：用于指定元素内容的垂直对齐方式，属性值包括 <code>top</code>（顶端对齐）、<code>bottom</code>（底端对齐）和 <code>middle</code>（居中对齐）。</li><li><code>position</code> 属性：用来设置元素的定位方式，取值 <code>relative</code>、<code>absolute</code>、<code>fixed</code>、<code>sticky</code>，配合 <code>top</code> 、<code>right</code> 、<code>bottom</code> 和 <code>left</code> 值，可以对元素进行精确定位。</li><li><code>margin-top</code>、<code>margin-right</code>、<code>margin-bottom</code>、<code>margin-left</code> 属性：用于设置元素的外边距，四个方向的值可以单独设置。</li><li><code>padding-top</code>、<code>padding-right</code>、<code>padding-bottom</code>、<code>padding-left</code> 属性：用于设置元素的内边距，四个方向的值可以单独设置。</li><li><code>border-top</code>、<code>border-right</code>、<code>border-bottom</code>、<code>border-left</code> 属性：用于设置元素的边框，四个方向的值可以单独设置，还可以结合 <code>border-style</code>（边框样式）、<code>border-width</code>（边框宽度）等属性一起使用。</li><li><code>border-top-left-radius</code> 、<code>border-top-right-radius</code> 、<code>border-bottom-right-radius</code> 、<code>border-bottom-left-radius</code> 属性：用于设置元素的圆角，四个顶点的值可以单独设置。</li><li><code>linear-gradient()</code> 和 <code>repeating-linear-gradient()</code> 属性：<code>to right</code> 、<code>to left</code> 、<code>to top</code> 和 <code>to bottom</code> 可以设定渐变的方向、起点和终点颜色。</li><li><code>float</code> 属性的值可以设置为 <code>left</code>、<code>right</code> ，分别表示浮动在左边、右边。</li><li><code>clear</code> 属性的值可以设置为 <code>left</code>、 <code>right</code>，分别表示清除浮动元素在左边、右边。</li><li>CSS Flexbox 布局中的 <code>flex-direction</code> 和 CSS Grid 布局中的 <code>grid-auto-flow</code> 。</li><li>CSS 框对齐相关的属性。</li></ul><p>这些与 <code>top</code> 、<code>right</code> 、<code>bottom</code> 和 <code>left</code> 方向有关联的属性和值，都被统称为 <strong>CSS 物理属性或值</strong>，它们最终在浏览器的呈现都会受到 HTML 的 <code>dir</code> 、CSS 的 <code>direction</code> （指定文本方向）、<code>writing-mode</code> （控制文本排列方式）、<code>text-orientation</code> （控制文本方向）和 <code>unicode-bidi</code> （设置双向文本的方向）等属性的影响。</p><h2 id="css-物理属性在多语言-web-应用中的缺陷" tabindex="-1">CSS 物理属性在多语言 Web 应用中的缺陷 <a class="header-anchor" href="#css-物理属性在多语言-web-应用中的缺陷" aria-label="Permalink to &quot;CSS 物理属性在多语言 Web 应用中的缺陷&quot;">​</a></h2><p>正如上面所述，CSS 中有很多属性和值是遵循 <strong>TRBL</strong> (Top、Right、Bottom 和 Left ) 模式的：</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/638acd7b367b4f4da38f106b41fb7eb9~tplv-k3u1fbpfcp-zoom-1.image" alt="img"></p><p>它们带有明确的方向性。只不过，针对多语言布局时，它给布局带来很大的局限性，比如下面这个简单的示例：</p><div class="language-CSS vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">CSS</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.thumb</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    margin-right</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>在<code>ltr</code> 模式（比如语文）和 <code>rtl</code> 模式（比如阿拉伯文），效果将会是像下图一样：</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/232e78cedaf04122a9b83ed551d5c4d2~tplv-k3u1fbpfcp-zoom-1.image" alt="img"></p><p>这个效果并不是我们所期待的，如果希望达到预期的效果，在以往编码的时候，需要做额外的处理：</p><div class="language-CSS vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">CSS</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.thumb</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    margin-right</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dir</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;rtl&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.thumb</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    margin-left</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/204683b95d544336a9c1cce3a9e0c5b4~tplv-k3u1fbpfcp-zoom-1.image" alt="img"></p><p>就上面这个示例而言，<strong><a href="https://juejin.cn/book/7161370789680250917" target="_blank" rel="noreferrer">现代 Web 布局</a></strong> 中的 Flexbox 布局和 Grid 布局可以很轻易的实现，但在一些场景中它们是无法做到的。所以，对于 Web 开发者来说，需要一个新的功能，它没有物理性的方向概念，只有开始和结束的概念，并且能自动匹配语言自身的书写模式或阅读模式。换句话说，它是带有逻辑性的，在 CSS 中称之为<strong>逻辑属性或值</strong>。</p><h2 id="什么是-css-逻辑属性" tabindex="-1">什么是 CSS 逻辑属性？ <a class="header-anchor" href="#什么是-css-逻辑属性" aria-label="Permalink to &quot;什么是 CSS 逻辑属性？&quot;">​</a></h2><p>在 CSS 中，逻辑属性是一种与文本书写方向有关的属性，它们提供了一种依赖于元素语义而不是物理方向的方式来定义元素的样式。这使得在从左到右（LTR）和从右到左（RTL）等不同方向书写的语言环境下，更容易地控制元素的布局和样式。</p><p>通过使用逻辑属性，可以在左到右（LTR）和右到左（RTL）等不同的书写或阅读模式下，使用相同的样式代码实现正确的布局。而传统的物理属性如 <code>margin</code>、<code>padding</code>、<code>border</code> 等，在不同书写或阅读模式中可能需要区别对待。</p><p>一些常用的逻辑属性，包括 <code>inline-size</code> (元素在行轴上的大小)、 <code>block-size</code> (元素在块轴上的大小)、<code>margin-inline-start</code> (元素在行轴上开始的外边距大小) 和 <code>margin-inline-end</code> (元素在行轴上结束的外边距大小)等，这些属性的实际表现形式将根据文本书写方向自动调整。</p><p>利用这些属性，可以更轻松地开发面向全球的多语言 Web 应用或网站，使其在不同语言环境下拥有相同的布局，而无需特意修改样式。</p><h2 id="使用-css-逻辑属性的优势是什么" tabindex="-1">使用 CSS 逻辑属性的优势是什么？ <a class="header-anchor" href="#使用-css-逻辑属性的优势是什么" aria-label="Permalink to &quot;使用 CSS 逻辑属性的优势是什么？&quot;">​</a></h2><p>在 CSS 中，传统的物理属性制定了文本在文本流中的默认行为，而逻辑属性则提供了一种更加灵活的控制布局的方式，这种方式相对于语言文本的书写方向进行自适应布局。例如，逻辑属性 <code>margin-inline-start</code> 和 <code>margin-inline-end</code> 的值，在 LTR 和 RTL 文本书写方向下分别表示元素左侧和右侧的外边距。</p><p>使用逻辑属性的好处在于，它可以使开发者更快速地在 CSS 布局中应用全球多语言环境的基本排版规则，而无需考虑物理定位的许多繁琐细节。例如，当处理从右到左书写的阿拉伯语时，由于其文本书写方向不同，许多元素需要在布局上进行特殊处理。但是如果使用逻辑属性，就可以根据布局所在的文本方向自动创建正确的布局和样式。</p><p>比如，你可以使用逻辑属性 <code>marign-inline-end</code> 来设置用户头像与内容之间的间距：</p><div class="language-CSS vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">CSS</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.thumb</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    margin-inline-end</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/4611bf567fb14c1db8e02df492e24387~tplv-k3u1fbpfcp-zoom-1.image" alt="img"></p><p>正如你所看到，在使用逻辑属性时，间距和布局取决于文本书写方向和阅读方向（无论是由 CSS 还是 HTML 设置）。因此，在不同的语言中可以重复使用 CSS 样式。例如，使用 CSS 逻辑属性重构建之后的 BBC 新闻网站，这比让用户依赖自动翻译的体验更好，这也意味着它们可以更好地满足不同地区的需求。不过，视觉样式在不同地区仍然保持相同。</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/a0d28dc36340428c8bfcf76d6f76b867~tplv-k3u1fbpfcp-zoom-1.image" alt="img"></p><blockquote><p>URL 地址：<a href="https://www.bbc.com/arabic" target="_blank" rel="noreferrer">https://www.bbc.com/arabic</a></p></blockquote><p>简而言之，Web 开发者在开发多语言 Web 应用或网站时，使用 CSS 逻辑属性的优势包括：</p><ul><li><strong>更好的代码可维护性</strong> ：使用逻辑属性，可以将不同语言环境下的布局和样式都包含在一个样式表中，无需使用多个样式表处理各种语言环境。这简化了网站的代码结构，使代码更易于维护。而在使用传统的物理属性时，可能需要为每种语言环境维护多个版本的样式表，这将增加代码的复杂性。</li><li><strong>更加精确的布局和样式</strong> ：使用逻辑属性，可以自动适应文本的书写方向并调整 Web 布局和 UI 样式，无需进行人工处理。这确保了界面的一致性，并可以避免因处理哪种语言而导致的布局问题。</li><li><strong>更高的可读性</strong> ：使用逻辑属性可以使代码更具可读性，因为代码中的属性名称可以更直接地反映元素在文本方向上的布局。而在使用传统的物理属性时，代码需要进行语言或书写方向的调整，这可能会导致代码的可读性变差。</li><li><strong>更具可扩展性</strong> ：逻辑属性适用于各种语言环境，无论是从左到右还是从右到左，都可以精确的控制 Web 布局。这为 Web 开发者提供了更广泛的可扩展性，因为他们可以使用相同的代码为不同的语言环境创建布局，并且也更容易添加新的语言支持。</li></ul><p>总之，<strong>使用 CSS 逻辑属性可以为多语言 Web 应用或网站开发带来更高的效率和可维护性，更加精确的布局和样式，更好的代码可读性和可扩展性</strong> 。</p><h2 id="逻辑属性给-css-带来哪些变化" tabindex="-1">逻辑属性给 CSS 带来哪些变化？ <a class="header-anchor" href="#逻辑属性给-css-带来哪些变化" aria-label="Permalink to &quot;逻辑属性给 CSS 带来哪些变化？&quot;">​</a></h2><p>在使用 CSS 逻辑属性之前，Web 开发者首先要了解的就是 CSS 引入逻辑属性之后，对 Web 带来哪些改变。简单地划分为两个部分：<strong>坐标系</strong>和<strong>属性与属性值</strong>的变化。</p><h3 id="css-的坐标系的变化" tabindex="-1">CSS 的坐标系的变化 <a class="header-anchor" href="#css-的坐标系的变化" aria-label="Permalink to &quot;CSS 的坐标系的变化&quot;">​</a></h3><p>在默认情况下，CSS 元素的内容是从左到右排列。但是对于某些语言或特定的排版需求，需要从右到左排列，或从上到下排列等。通常这种从左到右、从上到下的排列方向分别是沿着 Web 坐标轴的 <code>x</code> 轴（水平方向）和 <code>y</code> 轴（垂直方向）排列的。</p><p>我们都知道，在 Web 中有一个坐标系统，它分为 <code>x</code> 轴和 <code>y</code> 轴：</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/5cf4af4bc4ad4c1ea314f2ce42d1c817~tplv-k3u1fbpfcp-zoom-1.image" alt="img"></p><p>CSS 中的任一元素可以在这个坐标系统中沿着 <code>x</code> 轴向左或向右移动位置，也可以沿着 <code>y</code> 轴向上或向下移动位置。它们具有明确的物理方向：</p><ul><li><code>x</code> 轴方向有 <code>left</code> 和 <code>right</code> ；</li><li><code>y</code> 轴方向有 <code>top</code> 和 <code>bottom</code> 。</li></ul><p>除此之外，CSS 中还有一个<strong>流</strong>的概念，也就是我们常说的<strong>文档流（Document Flow）</strong> ，它指的是元素在 HTML 文档中的流动方向。在 HTML 文档中，元素通常从上到下（块元素）、从左到右（内联元素）依次排列。而且 Web 布局也是基于这个顺序进行排列的。</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/dcdbb1dd7e8c4947abf864e74c5d2321~tplv-k3u1fbpfcp-zoom-1.image" alt="img"></p><p>如果你想改变元素在文档流中的位置，就需要使用一些 <a href="https://juejin.cn/book/7161370789680250917?utm_source=profile_book" target="_blank" rel="noreferrer">Web 布局技巧</a>，例如浮动（<code>float</code>）、定位（<code>position</code>）、Flexbox 和 Grid 布局等。</p><p>同样的，Web 中的文本也存在流的概念。在拉丁语体系中（比如英文），字母和单词从左到右流动，而段落从上到下垂直排列；在阿拉伯语体系中（比如阿拉伯语），字母和单词从右到左流动，而段落从上到下垂直排列；在传统的汉语体系中（比如中文和日文），字和词从上到下排列，而段落从右到左水平排列。</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/79b752db9cfb463691161f02a38c1620~tplv-k3u1fbpfcp-zoom-1.image" alt="img"></p><p>正如上图所示，在一个多语言 Web 应用或网站中，页面的内容和布局应该能随着 HTML 文档方向更改而自动更新。换句话说，CSS 中的流意味着<strong>方向</strong>，字母、单词和内容以及布局都需要沿着流移动。这将引导我们进入块和内联逻辑方向。</p><p>也就是说，随着 CSS 的逻辑属性的出现，CSS 的坐标系就不再以 <code>x</code> 轴 和 <code>y</code> 轴来定义，而是以 <strong>内联</strong> （Inline）和 <strong>块</strong> （Block）来区分：</p><ul><li>内联维度是在使用的书写模式中运行的文本行（文本流）所在的维度。即，对应于文本流（阅读方式）的轴线。例如，英文是从左到右的文本流（或阿拉伯文从右到左），因此内联轴是水平的；对于日文，它的阅读方式是自上而下，因此内联轴是垂直的。</li><li>块维度是另一个维度，以及块（如段落）相继显示的方向。在英语和阿拉伯语中，这些是垂直的，而在任何垂直书写模式中，这些是水平的。</li></ul><p>它们随着 CSS 的书写模式改变，如下图所示：</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/dc5073bd4fc7423591e2cb2522eef319~tplv-k3u1fbpfcp-zoom-1.image" alt="img"></p><p>我们可以换过一种方式来理解：</p><ul><li><strong>块轴</strong> ：主要定义网站文档（元素块）流，CSS 的书写模式 <code>writing-mode</code> 会影响块轴的方向；</li><li><strong>内联轴</strong> ：主要定义网站的文本流方向，也就是文本的阅读方式，CSS 的 <code>direction</code> 或 HTML 的<code>dir</code> 会影响内联轴的方向。</li></ul><p>简单地说，<strong><code>writing-mode</code></strong> <strong>能很好地和块轴、行内轴、阅读模式以及书写模式结合起来</strong> ：</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/4b1ab406ed614ab99670917fab81eeb2~tplv-k3u1fbpfcp-zoom-1.image" alt="img"></p><p>为了更好地匹配书写模式或者说多语言的 Web 布局，我们需要从一些理念上做出改变。</p><p>首先是用“开始”和“结束”来替代以往的 TRBL（即 <code>top</code> 、<code>right</code> 、<code>bottom</code> 和 <code>left</code> ）：</p><ul><li><strong>开始（<strong><strong><code>start</code></strong></strong>）</strong> 这对应于文本的方向，并反映了文本的侧边，你将从哪里开始阅读。对于英文，开始对应于左。对于阿位伯文来说，对应于右。</li><li><strong>结束（<strong><strong><code>end</code></strong></strong>）</strong> 这也对应于文本的方向，并反映了文本的侧边，你将在哪里结束阅读。对于英文，结束对应于右。对于阿拉伯文来说，对应于左。</li></ul><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/f5114689e3524ebb8d0aa15c7e105738~tplv-k3u1fbpfcp-zoom-1.image" alt="img"></p><p>另一个就是“逻辑维度”来替代“物理维度”。前面的内联轴、块轴、开始和结束结合起来可以构建 CSS 逻辑属性中的流相对值。即 <code>block-start</code> 、<code>block-end</code> 、 <code>inline-start</code> 和 <code>inline-end</code> 。这几个属性也被称为<strong>逻辑维度</strong> ，其实就是用来指定在对应轴上的开始和结束位置。它们对应的就是我们熟悉的 <code>top</code> 、<code>right</code> 、 <code>bottom</code> 和 <code>left</code> 几个物理方向。</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/5fd98c8b3d9545748acfe85971ffa3d8~tplv-k3u1fbpfcp-zoom-1.image" alt="img"></p><p>换句话说，在 CSS 逻辑中，使用流相对值来代替相应的物理值。正如前面所述，流相对值（逻辑维度）和 CSS 的书写模式 <code>writing-mode</code> 或阅读方式 <code>direction</code> 有关。</p><p>接下来，我们通过几种典型的语言为例，来向大家阐述逻辑维度和物理维度的映射关系。 首先来看英文，英文的阅读方式一般是从左往右（即 <code>dirction: ltr</code> 和 <code>writing-mode:horizontal-tb</code> ），这种模式常称为 <strong>LTR</strong> （Left-To-Right）。它的内联轴是水平的，块轴是垂直的，相应的逻辑维度和物理维度映射关系如下：</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/e5b7b03a0c3a48c89c5114ef7830d3c2~tplv-k3u1fbpfcp-zoom-1.image" alt="img"></p><table tabindex="0"><thead><tr><th><strong>逻辑维度</strong></th><th><strong>物理维度</strong></th></tr></thead><tbody><tr><td><code>inline-start</code></td><td><code>left</code></td></tr><tr><td><code>inline-end</code></td><td><code>right</code></td></tr><tr><td><code>block-start</code></td><td><code>top</code></td></tr><tr><td><code>block-end</code></td><td><code>bottom</code></td></tr></tbody></table><p>接着来看阿拉伯文，它的阅读方式是从右往左（即 <code>direction: rtl</code> 和 <code>writing-mode:horizontal-tb</code>），这种模式常称为 <strong>RTL</strong> （Right-To-Left）。它的内联轴是水平的，块轴是垂直的，相应的逻辑维度和物理维度映射关系如下：</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/92d4c7b27aae45c699f9ba854afb795c~tplv-k3u1fbpfcp-zoom-1.image" alt="img"></p><table tabindex="0"><thead><tr><th><strong>逻辑维度</strong></th><th><strong>物理维度</strong></th></tr></thead><tbody><tr><td><code>inline-start</code></td><td><code>right</code></td></tr><tr><td><code>inline-end</code></td><td><code>left</code></td></tr><tr><td><code>block-start</code></td><td><code>top</code></td></tr><tr><td><code>block-end</code></td><td><code>bottom</code></td></tr></tbody></table><p>再来看日文，竖排（有点类似中国古代的汉字书写模式），对应的 <code>writing-mode: vertical-rl</code> 。它的内联轴是垂直的，块轴是水平的，相应的逻辑维度和物理维度映射关系如下：</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/34e6bf8c7bc84b918b9eaa00f24d4729~tplv-k3u1fbpfcp-zoom-1.image" alt="img"></p><table tabindex="0"><thead><tr><th><strong>逻辑维度</strong></th><th><strong>物理维度</strong></th></tr></thead><tbody><tr><td><code>inline-start</code></td><td><code>top</code></td></tr><tr><td><code>inline-end</code></td><td><code>bottom</code></td></tr><tr><td><code>block-start</code></td><td><code>right</code></td></tr><tr><td><code>block-end</code></td><td><code>left</code></td></tr></tbody></table><p>最后再来看蒙文，也是竖排，和日文不同的是 <code>writing-mode: vertical-lr</code> 。它的内联轴是垂直的，块轴是水平的，相应的逻辑维度和物理维度映射关系如下：</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/a49063e4676243fc9ab3194c25247cf6~tplv-k3u1fbpfcp-zoom-1.image" alt="img"></p><table tabindex="0"><thead><tr><th><strong>逻辑维度</strong></th><th><strong>物理维度</strong></th></tr></thead><tbody><tr><td><code>inline-start</code></td><td><code>top</code></td></tr><tr><td><code>inline-end</code></td><td><code>bottom</code></td></tr><tr><td><code>block-start</code></td><td><code>left</code></td></tr><tr><td><code>block-end</code></td><td><code>right</code></td></tr></tbody></table><p>如果你对 CSS Flexbox 和 CSS Grid 两种布局有过深入的探究的话，那么你就能轻易的发现，<strong>在 Flexbox 和 Grid 布局中</strong>，<strong>流的概念比方向的概念重要得多</strong>。比如，在 Flexbox 中，不再关注方向，而是更关注主轴和侧轴：</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/3ce23759e39a408c8313386947ab50ce~tplv-k3u1fbpfcp-zoom-1.image" alt="img"></p><p>上图展示的是 Flexbox 容器的 <code>flex-direction</code> 值为 <code>row</code> 时，LTR 和 RTL 相应的流方向。也就是说，使用 CSS Flexbox 构建 Web 布局时，我们不需要针对 LTR 和 RTL 提供不同的样式，它可以根据 <code>dir</code> 或 <code>direction</code> 自动翻转。这是一个巨大的好处！</p><p>尤其是在 CSS Grid 布局中，方向变得更无意义了。因为，网格布局中的内联轴（Inline Axis）和块轴（Block Axis）可以和网格中的行与列相映射，比如书写模式和阅读模式是 <code>ltr</code>（Left-To-Right）时，内联轴也称为行轴（Row Axis），块轴也称为列轴（Column Axis）：</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7f87cb5342ea4083b45bffee6498e5b0~tplv-k3u1fbpfcp-zoom-1.image" alt="img"></p><p>需要注意的是，虽然内联轴（Inline Axis）和块轴（Block Axis）会因 CSS 的书写模式或文档的阅读模式改变，但网格中的行轴和列轴是始终不变的：</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/13771a41358c40e18ae0f0efb6710312~tplv-k3u1fbpfcp-zoom-1.image" alt="img"></p><p>所以，你在 Flexbox 或 Grid 布局中设置项目对齐方式时，会有 <code>flex-start</code> 、<code>flex-end</code> 、<code>start</code> 和 <code>end</code> 等值。</p><h3 id="css-的属性和值的变化" tabindex="-1">CSS 的属性和值的变化 <a class="header-anchor" href="#css-的属性和值的变化" aria-label="Permalink to &quot;CSS 的属性和值的变化&quot;">​</a></h3><p>CSS 逻辑属性给 CSS 带来的第二个方面变化是 CSS 的属性和属性值。简单地说：</p><ul><li><code>display</code> 随着块轴和内联轴的出现，可以设置两个值。</li><li>使用 <code>inline-size</code> 、<code>block-size</code> 、<code>min-inline-size</code> 、<code>max-inline-size</code> 、<code>min-block-size</code> 和 <code>max-block-size</code> 等属性来设置容器尺寸大小。</li><li>盒模型的变化，物理盒模型中以 <code>-top</code> 、<code>-right</code> 、<code>-bottom</code> 和 <code>-left</code> 后缀结合的属性相应地被使用 <code>-inline-start</code> 、<code>-inline-end</code> 、<code>-block-start</code> 和 <code>-block-end</code> 为后缀的逻辑属性替代。</li><li><code>top</code> 、<code>right</code> 、<code>bottom</code> 和 <code>left</code> 等偏移属性分别被 <code>inset-block-start</code> 、<code>inset-inline-end</code> 、<code>inset-block-end</code> 和 <code>inset-inline-start</code> 等逻辑属性替代。</li><li><code>border-radius</code> 的子属性 <code>border-top-left-radius</code> 、<code>border-top-right-radius</code> 、<code>border-bottom-right-radius</code> 和 <code>border-bottom-left-radius</code> 等物理属性分别被 <code>border-start-start-radius</code> 、<code>border-start-end-radius</code> 、<code>border-end-end-radius</code> 和 <code>border-end-start-radius</code> 等逻辑属性替代。</li><li><code>overflow-x</code> 和 <code>overflow-y</code> 物理属性分别被 <code>overflow-inline</code> 和 <code>overflow-block</code> 逻辑属性替代。</li><li><code>overscroll-behavior-x</code> 和 <code>overscroll-behavior-y</code> 物理属性分别被 <code>overscroll-behavior-inline</code> 和 <code>overscroll-behavior-block</code> 等逻辑属性替代。</li><li><code>float</code> 和 <code>clear</code> 属性的 <code>left</code> 和 <code>right</code> 物理值分别被 <code>inline-start</code> 和 <code>inline-end</code> 逻辑值替代。</li><li><code>text-align</code> 属性的 <code>left</code> 和 <code>right</code> 物理值分别被 <code>start</code> 和 <code>end</code> 逻辑值替代。</li><li><code>resize</code> 属性的 <code>horizontal</code> 和 <code>vertical</code> 特理值分别被 <code>inline</code> 和 <code>block</code> 逻辑值替代。</li></ul><p>下图中罗列出常见的物理属性对应的逻辑属性：</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/1cfef92580054204b18d38ddedb6ad16~tplv-k3u1fbpfcp-zoom-1.image" alt="img"></p><p>接下来，我们针对几个重要部分来展开阐述。</p><p>首先来看 CSS 的 <code>display</code> 属性，自从 CSS 中引入 <code>inline</code> 和 <code>block</code> 逻辑轴的概念之后，CSS 的 <code>display</code> 属性可以根据它们（<code>inline</code> 和 <code>block</code>）设置两个值：</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/02e28232796c497495af2216f302f480~tplv-k3u1fbpfcp-zoom-1.image" alt="img"></p><p>比如：</p><div class="language-CSS vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">CSS</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.element</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    display</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">inline-flex</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /* 等同着 */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    display</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">inline</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  flex</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>你可以用下图来映射出 <code>display</code> 属性现有的值：</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d41b687caef84da7a60978a9158d517d~tplv-k3u1fbpfcp-zoom-1.image" alt="img"></p><p>需要特别声明的是，CSS 的 <code>display</code> 的值并没有逻辑值一说，只是使用双值可以更好理解值与文档流之间的对应关系。我们曾在<a href="https://juejin.cn/book/7199571709102391328/section/7199844993073152038" target="_blank" rel="noreferrer">小册的第一节课</a>中有过详细的阐述，这里就不再重复阐述。</p><p>接着来看 CSS 的逻辑尺寸。即：</p><ul><li><code>width</code> 、<code>min-width</code> 和 <code>max-width</code> 分别对应的逻辑属性是 <code>inline-size</code> 、<code>min-inline-size</code> 和 <code>max-inline-size</code> ；</li><li><code>height</code> 、<code>min-height</code> 和 <code>max-height</code> 分别对应的逻辑属性是 <code>block-size</code> 、<code>min-block-size</code> 和 <code>max-block-size</code> 。</li></ul><p>在多语言的 Web 应用或网站的开发中，我们应该使用逻辑尺寸来指定元素容器的尺寸。元素容器能随文本方向的改变自动调整容器的尺寸。例如：</p><div class="language-CSS vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">CSS</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 物理尺寸 */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.element--physical</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">300</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    height</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 逻辑尺寸 */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.element--logical</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    inline-size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">300</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    block-size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b5e95e1e0a93478aaf57c37ce8aee44d~tplv-k3u1fbpfcp-zoom-1.image" alt="img"></p><blockquote><p>Demo 地址：<a href="https://codepen.io/airen/full/rNZgOdB" target="_blank" rel="noreferrer">https://codepen.io/airen/full/rNZgOdB</a></p></blockquote><p>正如你所看到的，当 <code>writing-mode</code> 的值从 <code>horizontal-tb</code> 变成 <code>vertical-lr</code> 或 <code>vertical-rl</code> 时，设置了物理尺寸的元素会自动调整容器尺寸。如下图所示：</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/6daa94c24aa7494c88a980f73f0908b2~tplv-k3u1fbpfcp-zoom-1.image" alt="img"></p><p>再来看 CSS 的盒模型。可以说，CSS 逻辑属性对盒模型的变化是最大的，物理盒模型中的所有属性都有对应的逻辑属性。因此，在 CSS 中又有逻辑盒模型一说，它和物理盒模型是映射关系，如下图所示：</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/62b5f42fc9274a38b67d921509f2fc6b~tplv-k3u1fbpfcp-zoom-1.image" alt="img"></p><p>也就是说，在构建多语言 Web 应用或网站时，只要是用于定义容器盒子相关的样式时，都应该使用相对应的逻辑属性。比如下面这个示例：</p><div class="language-CSS vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">CSS</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.card</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    display</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">flex</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    background-color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">#fff</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    border-radius</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /* CSS 逻辑属性 */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    padding-block-start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    padding-block-end</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    padding-inline-start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    padding-inline-end</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    border-inline-start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> solid</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> #fd622b</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.card</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;"> img</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    border-radius</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">50</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /* CSS 逻辑属性 */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    inline-size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">80</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    block-size</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">80</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    margin-inline-end</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.5</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.card</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;"> p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /* CSS 逻辑属性 */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    margin-block-end</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">.5</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.card</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;"> h4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /* CSS 逻辑属性 */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    margin-block-end</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.5</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* RTL */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">dir</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;rtl&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    direction</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">rtl</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    font-family</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Cairo&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">sans-serif</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/8138b1d8ed1a44f086569c17000828a2~tplv-k3u1fbpfcp-zoom-1.image" alt="img"></p><blockquote><p>Demo 地址：<a href="https://codepen.io/airen/full/QWVRyGL" target="_blank" rel="noreferrer">https://codepen.io/airen/full/QWVRyGL</a></p></blockquote><p>同样的，CSS 逻辑盒模型中的相关属性都会因 <code>dir</code> 、<code>direction</code> 和 <code>writing-mode</code> 属性的值有所差异，具体的如下图所示：</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/a261733d611045ad8875f12f695d5589~tplv-k3u1fbpfcp-zoom-1.image" alt="img"></p><p>有了这些基础，你就可以使用 CSS 逻辑属性来开发一个多语言的 Web 应用或网站，例如 <a href="https://codepen.io/Alaa_AbdElrahim/full/XWaBBoq" target="_blank" rel="noreferrer">@Alaa Abd El-Rahim 在 Codepen 分享的一个示例</a>。我在他的基础上 Fork 了一份，并在该示例的“英文”、“日文”、“阿拉伯文”的基础上新增了“中文”。这样就构建了一个四国语言的 Web 页面：</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/060dac1b559f4fee826f9406a523a9ed~tplv-k3u1fbpfcp-zoom-1.image" alt="img"></p><blockquote><p>Demo 地址：<a href="https://codepen.io/airen/full/LYJoGQd" target="_blank" rel="noreferrer">https://codepen.io/airen/full/LYJoGQd</a> （详细解读可以阅读《<a href="https://juejin.cn/book/7161370789680250917/section/7161625415935590436" target="_blank" rel="noreferrer">Web 中的向左向右：Web 布局中 LTR 切换到 RTL 常见错误</a>》一文！）</p></blockquote><p>示例代码就不在这里展示了，感兴趣的同学可以查看 Demo 的源码！</p><h2 id="css-逻辑属性的简写属性" tabindex="-1">CSS 逻辑属性的简写属性 <a class="header-anchor" href="#css-逻辑属性的简写属性" aria-label="Permalink to &quot;CSS 逻辑属性的简写属性&quot;">​</a></h2><p>在 CSS 中有很多属性具有简写属性（子属性），比如我们熟悉的 <code>margin</code> 、<code>padding</code> 、<code>border</code> 、<code>border-radius</code> 、<code>overflow</code> 和 <code>overscroll-behavior</code> 等。拿 <code>margin</code> 为例吧，它可以拆分出 <code>margin-top</code> 、<code>margin-right</code> 、<code>margin-bottom</code> 和 <code>margin-left</code> 四个子属性。</p><p>其实，在 CSS 逻辑属性中也有这样的概念。</p><h3 id="margin-和-padding-简写属性" tabindex="-1">margin 和 padding 简写属性 <a class="header-anchor" href="#margin-和-padding-简写属性" aria-label="Permalink to &quot;margin 和 padding 简写属性&quot;">​</a></h3><p>CSS 逻辑属性中 <code>margin</code> 的简写属性有 <code>margin-block</code> 和 <code>margin-inline</code> ：</p><div class="language-CSS vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">CSS</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.margin--logical</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    margin-block</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ch</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    margin-inline</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ch</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 4</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /* 等同于 */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    margin-block-start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    margin-block-end</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    margin-inline-start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    margin-inline-end</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>如果 <code>-start</code> 和 <code>-end</code> 对应的属性值相同，那么使用简写属性时，可以只设置一个值，比如：</p><div class="language-CSS vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">CSS</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.margin--logical</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    margin-block</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    margin-inline</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /* 等同于 */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    margin-block-start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    margin-block-end</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    margin-inline-start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    margin-inline-end</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>逻辑属性 <code>padding</code> 和 <code>margin</code> 类似：</p><ul><li><code>padding-inline</code> 是 <code>padding-inline-start</code> 和 <code>padding-inline-end</code> 的简写属性；</li><li><code>padding-block</code> 是 <code>padding-block-start</code> 和 <code>padding-block-end</code> 的简写属性。</li></ul><h3 id="border-简写属性" tabindex="-1">border 简写属性 <a class="header-anchor" href="#border-简写属性" aria-label="Permalink to &quot;border 简写属性&quot;">​</a></h3><p>我们知道物理属性 <code>border</code> 可以拆分为：</p><ul><li>边框粗细：<code>border-width</code> ，它又可以拆分为 <code>border-top-width</code> 、<code>border-right-width</code> 、<code>border-bottom-width</code> 和 <code>border-left-width</code>。</li><li>边框颜色：<code>border-color</code> ，它又可以拆分为 <code>border-top-color</code> 、<code>border-right-color</code> 、<code>border-bottom-color</code> 和 <code>border-left-color</code>。</li><li>边框样式：<code>border-style</code> ，它又可拆分为 <code>border-top-style</code> 、<code>border-right-style</code> 、<code>border-bottom-style</code> 和 <code>border-left-style</code> 。</li></ul><p>它相对于 <code>padding</code> 和 <code>margin</code> 要复杂得多。</p><p>逻辑属性 <code>border</code> 也可以根据颜色（<code>color</code>）、粗细（<code>width</code>）和样式（<code>style</code>）进行拆分，即：</p><ul><li>边框粗细：<code>border-block-width</code> 和 <code>border-inline-width</code> ，它们又分别可以拆分出 <code>border-block-start-width</code> 和 <code>border-block-end-width</code> ；<code>border-inline-start-width</code> 和 <code>border-inline-end-width</code>。</li><li>边框颜色：<code>border-block-color</code> 和 <code>border-inline-color</code> ，它们又分别可以拆分出 <code>border-block-start-color</code> 和 <code>border-block-end-color</code> ；<code>border-inline-start-color</code> 和 <code>border-inline-end-color</code>。</li><li>边框样式：<code>border-block-style</code> 和 <code>border-inline-style</code> ，它们又分别可以拆分出 <code>border-block-start-style</code> 和 <code>border-block-end-style</code> ；<code>border-inline-start-style</code> 和 <code>border-inline-end-style</code>。</li></ul><p>来看一个边框颜色的示例：</p><div class="language-CSS vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">CSS</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.border-color--logical</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    border-block-color</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">#09f</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> #f36</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /* 等同于 */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    border-block-start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">#09f</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    border-block-end</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">#f36</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>但需要注意的是，逻辑边框和逻辑内外、逻辑外边距有一点不同，使用逻辑边框 <code>border-block</code> 和 <code>border-inline</code> 子属性设置元素边框时，只能设置同一方向相同的边框样式。例如：</p><div class="language-CSS vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">CSS</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.border--logical</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    border-block</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> solid</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> orange</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    border-inline</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> dashed</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>如果每条边框样式规则不同，则需要分别使用 <code>border-block-start</code> 、<code>border-block-end</code> 、<code>border-inline-start</code> 和 <code>border-inline-end</code> 。例如：</p><div class="language-CSS vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">CSS</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.border--logical</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    border-block-start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ch</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> solid</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> red</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    border-block-end</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ch</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> dashed</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> yellow</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    border-inline-start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ch</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> double</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    border-inline-end</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ch</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> groove</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> orange</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/826ed54c62c546e2b7d855c9395f0447~tplv-k3u1fbpfcp-zoom-1.image" alt="img"></p><blockquote><p>Demo 地址：<a href="https://codepen.io/airen/full/MWqdybO" target="_blank" rel="noreferrer">https://codepen.io/airen/full/MWqdybO</a></p></blockquote><h3 id="简写的-border-radius-属性" tabindex="-1">简写的 border-radius 属性 <a class="header-anchor" href="#简写的-border-radius-属性" aria-label="Permalink to &quot;简写的 border-radius  属性&quot;">​</a></h3><p>从小册的《<a href="https://juejin.cn/book/7199571709102391328/section/7199845563389444099" target="_blank" rel="noreferrer">你不知道的 border-radius</a>》课程中可以得知，<code>border-radius</code> 的子属性有：</p><ul><li>左上角：<code>border-top-left-radius</code>；</li><li>右上角：<code>border-top-right-radius</code>；</li><li>右下角：<code>border-bottom-right-radius</code>；</li><li>左下角：<code>border-bottom-left-radius</code>。</li></ul><p>例如：</p><div class="language-CSS vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">CSS</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.border-radius</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    border-radius</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 50</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 50</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 100</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /* 等同于 */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    border-top-left-radius</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    border-top-right-radius</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">50</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    border-bottom-right-radius</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">50</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    border-bottom-left-radius</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.border-radius</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    border-radius</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 50</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 100</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 50</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> / </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 50</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 50</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 50</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /* 等同于 */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    border-top-left-radius</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 100</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    border-top-right-radius</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">50</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 50</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    border-bottom-right-radius</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 50</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    border-bottom-left-radius</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">50</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 50</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/6ac2f9e3394845de91d5a02c1642860a~tplv-k3u1fbpfcp-zoom-1.image" alt="img"></p><p>但对于逻辑属性 <code>border-radius</code> 的子属性，并不像 <code>margin</code> 、<code>padding</code> 和 <code>border</code> 等属性，它没有 <code>border-block-radius</code> 和 <code>border-inline-radius</code> 子属性。逻辑属性 <code>border-radius</code> 的子属性：</p><ul><li><code>border-start-start-radius</code>；</li><li><code>border-start-end-radius</code>；</li><li><code>border-end-end-radius</code>；</li><li><code>border-end-start-radius</code>。</li></ul><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/587804e201b743ee911887d4d2ec10a6~tplv-k3u1fbpfcp-zoom-1.image" alt="img"></p><p>你可能会对 <code>-start-start</code> 和 <code>-start-end</code> 等感到困惑。其实它和物理属性中的 <code>-top-left</code> 、<code>-top-right</code> 等是相似的：出现在前面的 <code>start</code> 和 <code>end</code> 是指块轴（Block Axis）的起始和结束位置；出现在后面的 <code>start</code> 和 <code>end</code> 是指内联轴（Inline Axis）的起始和结束位置。</p><div class="language-CSS vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">CSS</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 物理 CSS border-radius */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.border-radius--physical</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  border-top-left-radius</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rem</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  border-top-right-radius</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rem</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  border-bottom-right-radius</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rem</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  border-bottom-left-radius</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rem</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 5</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* 逻辑 CSS border-radius */</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.border-radius--logical</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  border-start-start-radius</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rem</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  border-start-end-radius</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rem</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  border-end-end-radius</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rem</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  border-end-start-radius</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rem</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 5</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/3a64ff27d062434cbed93a6250bc7662~tplv-k3u1fbpfcp-zoom-1.image" alt="img"></p><blockquote><p>Demo 地址：<a href="https://codepen.io/airen/full/KKxLMxE" target="_blank" rel="noreferrer">https://codepen.io/airen/full/KKxLMxE</a></p></blockquote><p>需要注意的是，在 CSS 中逻辑属性 <code>border-radius</code> 并没有简写属性。因此，在开发多语言 Web 应用或网站时，最好是使用拆分后的逻辑 <code>border-radius</code> 属性，尤其是四个角的圆角半径不同之时。</p><h3 id="inset-简写属性" tabindex="-1">inset 简写属性 <a class="header-anchor" href="#inset-简写属性" aria-label="Permalink to &quot;inset 简写属性&quot;">​</a></h3><p>对于定位元素（即 <code>position</code> 设置非 <code>static</code> 的元素）可以使用 <code>top</code> 、<code>right</code> 、<code>bottom</code> 和 <code>left</code> 来设置偏移量。这四个属性有一个简写属性 <code>inset</code> ：</p><div class="language-CSS vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">CSS</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.inset</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    position</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">absolute</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    inset</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 20</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 30</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 40</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /* inset 等同于 */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    top</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    right</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    bottom</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    left</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">40</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>看起来很方便。只不过，<code>inset</code> 属性是一个物理属性。相应的 CSS 逻辑属性是：</p><ul><li><code>top</code> 映射 <code>inset-block-start</code>；</li><li><code>right</code> 映射 <code>inset-inline-end</code>；</li><li><code>bottom</code> 映射 <code>inset-block-end</code>；</li><li><code>left</code> 映射 <code>inset-inline-start</code>。</li></ul><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/c019489f39b041e9a9ec9e5731404c22~tplv-k3u1fbpfcp-zoom-1.image" alt="img"></p><p>不过，CSS 逻辑属性中可以使用 <code>inset-block</code> 和 <code>inset-inline</code> 来设置偏移量，它们分别是：</p><ul><li><code>inset-block</code> 是 <code>inset-block-start</code> 和 <code>inset-block-end</code> 的简写属性；</li><li><code>inset-inline</code> 是 <code>inset-inline-start</code> 和 <code>inset-inline-end</code> 的简写属性。</li></ul><p>例如：</p><div class="language-CSS vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">CSS</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.inset</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    position</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">absolute</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    inset-block</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 30</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    inset-inline</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">40</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 50</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /* 等同于 */</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    inset-block-start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">20</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    inset-block-end</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    inset-inline-start</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">40</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    inset-inline-end</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">50</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="避免使用简写属性" tabindex="-1">避免使用简写属性 <a class="header-anchor" href="#避免使用简写属性" aria-label="Permalink to &quot;避免使用简写属性&quot;">​</a></h3><p>如果你正在开发一个多语言 Web 应用或网站，那么应该尽可能地在代码中不使用 CSS 的简写属性，尤其是四个方向的值不相等的情况下。比如 <code>border</code> 、<code>margin</code> 、<code>padding</code> 、<code>border-radius</code> 等属性。因为它们始终会代表着物理方向，例如下面这段代码：</p><div class="language-CSS vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">CSS</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.element</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    border</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> solid</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> #f36</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    border-width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ch</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ch</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ch</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 4</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    margin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rem</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rem</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rem</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 4</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    padding</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rem</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rem</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rem</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 4</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    border-radius</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rem</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rem</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rem</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 4</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/523e9c1bbf394c3eab94574bcdbe5e28~tplv-k3u1fbpfcp-zoom-1.image" alt="img"></p><blockquote><p>Demo 地址： <a href="https://codepen.io/airen/full/PodvGbX" target="_blank" rel="noreferrer">https://codepen.io/airen/full/PodvGbX</a></p></blockquote><p>你会发现，改变 <code>writing-mode</code> 时，元素的 <code>border</code> 、<code>border-radius</code> 、<code>margin</code> 和 <code>padding</code> 并不会受到任何影响。这对于多语言 Web 应用或网站是非常危险的。反之，如果换成拆分后的子属性（逻辑属性），结果就完全不一样：</p><div class="language-CSS vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">CSS</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.element--physical</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    border</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> solid</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> #f36</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    border-width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ch</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ch</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ch</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 4</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    margin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rem</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rem</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rem</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 4</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    padding</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rem</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rem</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rem</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 4</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    border-radius</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rem</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rem</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rem</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 4</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.element--logical</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    border</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">px</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> solid</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> #f36</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    border-block-width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ch</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    border-inline-width</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rem</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    margin-block</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rem</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    margin-inline</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rem</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    padding-block</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rem</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    padding-inline</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rem</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    border-start-start-radius</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    border-start-end-radius</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    border-end-end-radius</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    border-end-start-radius</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/8112578f3a054c5a927f18557711c40a~tplv-k3u1fbpfcp-zoom-1.image" alt="img"></p><blockquote><p>Demo 地址：<a href="https://codepen.io/airen/full/dyqEpdK" target="_blank" rel="noreferrer">https://codepen.io/airen/full/dyqEpdK</a></p></blockquote><p>简而言之，<strong>在开发多语言 Web 应用或网站时，虽然简写的 CSS 属性的使用能使你的代码更干净，但不建议直接使用，因为我们所熟悉的简写 CSS 属性都是物理属性，它和相对应的简写逻辑属性是完全不同的</strong>。</p><p>换句话说，在开发多语言 Web 应用或网站时，请尽量不要使用盒模型相关的简写属性，即 <code>border</code> 、<code>padding</code> 、<code>margin</code> 和 <code>border-radius</code> 等，同时也包括 <code>inset</code> 属性。</p><h2 id="小结" tabindex="-1">小结 <a class="header-anchor" href="#小结" aria-label="Permalink to &quot;小结&quot;">​</a></h2><p>如果在构建 Web 应用或页面时，面对的仅是单一语言，那么使用 CSS 物理属性并无大碍，而且也不会影响整个 Web 应用的布局。你使用 CSS 逻辑属性来替代物理属性也可以实现同等效果。如果你构建的 Web 应用是要处理多语言，那么物理属性带来的局限性就非常的明显，而且也会造成阅读上的不便，这个时候 CSS 逻辑属性起到的作用就非常大。</p><p>逻辑属性的主要优点是，它是一组用于根据文本流方向动态处理布局的属性，它们使得在不同的书写模式之间切换更加容易，并且它们是相对于流而不是固定方向来工作的，这使得布局更具灵活性和可重用性。但它们也可能会给开发者带来一定的学习曲线和混淆。</p><p>总之，CSS 逻辑属性是一种强大的工具，可以帮助开发者轻松处理国际化网站的布局，并保持代码的简洁和易读性。</p>`,208),p=[t];function l(h,k,d,r,o,c){return a(),i("div",null,p)}const y=s(e,[["render",l]]);export{E as __pageData,y as default};
