import{_ as t,c as e,o as a,a2 as i}from"./chunks/framework.D8Prfz4N.js";const m=JSON.parse('{"title":"开发许可证：维护自己的版权、拒绝拿来党","description":"","frontmatter":{},"headers":[],"relativePath":"pamphlet/基于 Vite 的组件库工程化实战/10 开发许可证：维护自己的版权、拒绝拿来党.md","filePath":"pamphlet/基于 Vite 的组件库工程化实战/10 开发许可证：维护自己的版权、拒绝拿来党.md"}'),d={name:"pamphlet/基于 Vite 的组件库工程化实战/10 开发许可证：维护自己的版权、拒绝拿来党.md"},l=i('<h1 id="开发许可证-维护自己的版权、拒绝拿来党" tabindex="-1">开发许可证：维护自己的版权、拒绝拿来党 <a class="header-anchor" href="#开发许可证-维护自己的版权、拒绝拿来党" aria-label="Permalink to &quot;开发许可证：维护自己的版权、拒绝拿来党&quot;">​</a></h1><p>软件是一种著作，天然是拥有版权的。很多人会认为放在 Github 上的就是开源软件，既然放了源代码，我就可以随便使用了。其实版权法规定著作是禁止共享的，也就是说没有许可证的软件等于保留版权。虽然源代码公开了，但并不表明你可以随便使用，一用就会侵犯版权。如果软件侵犯版权，必须明确授予用户开源许可证。</p><p>另外，有一些没有道德的公司会大量使用开源的产品，进行组合封装修改后当做自己的劳动创造。这些拿来党属于破坏游戏规则的一群人，这些人也应该让他们受到应有的惩罚，例如：GPL协议就是防止这种情况发生的。</p><h2 id="用户故事-userstory" tabindex="-1">用户故事(UserStory) <a class="header-anchor" href="#用户故事-userstory" aria-label="Permalink to &quot;用户故事(UserStory)&quot;">​</a></h2><p>为组件库选择一个合适的开源许可证。</p><h2 id="任务分解-task" tabindex="-1">任务分解(Task) <a class="header-anchor" href="#任务分解-task" aria-label="Permalink to &quot;任务分解(Task)&quot;">​</a></h2><ul><li>选择合适的开源许可证；</li><li>在 Github 上申请开源许可证。</li></ul><h2 id="任务实现" tabindex="-1">任务实现 <a class="header-anchor" href="#任务实现" aria-label="Permalink to &quot;任务实现&quot;">​</a></h2><p>选择开源许可证其实就是你的版权声明。首先应该清晰地认识什么是版权。</p><p><strong>版权是知识产权的一种</strong>，和著作权是同一个概念，可以自动取得，也可以登记取得，是作者对自己的著作享有的法定权利。著作权是公民、法人依法享有的一种民事权利，属于无形财产权。享有著作权的作者可以决定是否对他的作品进行著作权意义上的使用和处理，在我国，只要发表就会受到保护。</p><h3 id="开源许可证的种类" tabindex="-1">开源许可证的种类 <a class="header-anchor" href="#开源许可证的种类" aria-label="Permalink to &quot;开源许可证的种类&quot;">​</a></h3><p>我们可以把版权分为四大种。</p><ul><li>Copyright - 受版权保护的；未经准许不得复制的。</li><li>Copyleft - 有限空间内的自由使用，不得用于商业目的，且不得闭源，衍生品仍需开源。</li><li>Permissive - 宽松自由软件许可协议，对软件的使用、修改、传播等方式采用最低限制的自由软件许可协议条款类型。</li><li>Create Commons - 大多是被用于设计类的工程上，署名权，非商业用途，禁止衍生。</li></ul><p>实际上，一般只会把 Copyleft 和 Permissive 叫做开源，其中 Permissive 限制比较宽松。而 Copyleft 要求不得用于商业目的且不得闭源，并且后续衍生子软件必须遵守条款。其实这种协议就是为了弘扬开源精神，不希望某些公司垄断和强占开发成果。</p><p>Permissive 宽松自由许可：</p><ul><li>BSD(二条版)；</li><li>BSD(三条版)；</li><li>MIT；</li><li>Apache2。</li></ul><table tabindex="0"><thead><tr><th></th><th>BSD(二条版)</th><th>BSD(三条版)</th><th>MIT</th><th>Apache2</th></tr></thead><tbody><tr><td>允许修改后闭源</td><td>✅</td><td>✅</td><td>✅</td><td>✅</td></tr><tr><td>不保证代码质量</td><td>✅</td><td>✅</td><td>✅</td><td>✅</td></tr><tr><td>必须披露原始作者</td><td>✅</td><td>✅</td><td>✅</td><td>✅</td></tr><tr><td>不得使用原始作者名字为软件推广</td><td></td><td>✅</td><td></td><td></td></tr><tr><td>分发时必须保留原始许可声明</td><td></td><td></td><td>✅</td><td></td></tr><tr><td>修改过必须向用户声明修改</td><td></td><td></td><td></td><td>✅</td></tr><tr><td>未修改必须保持许可证不变</td><td></td><td></td><td></td><td>✅</td></tr></tbody></table><p>Copyleft 有限空间内的自由：</p><ul><li>Copyleft；</li><li>GPL；</li><li>Affero GPL (AGPL)；</li><li>LGPL；</li><li>Mozilla（MPL）。</li></ul><table tabindex="0"><thead><tr><th></th><th>GPL</th><th>Affero GPL (AGPL)</th><th>LGPL</th><th>Mozilla（MPL）</th></tr></thead><tbody><tr><td>分发二进制格式，必须提供源码</td><td>✅</td><td>✅</td><td>✅</td><td>✅</td></tr><tr><td>修改后，必须与修改前保持许可一致</td><td>✅</td><td>✅</td><td>✅</td><td>✅</td></tr><tr><td>不得在原始许可以外附加限制</td><td>✅</td><td>✅</td><td>✅</td><td>✅</td></tr><tr><td>如果项目包含GPL许可代码， 整个项目必须开源</td><td>✅</td><td></td><td></td><td></td></tr><tr><td>云服务用到的代码， 云服务代码必须开源</td><td></td><td>✅</td><td></td><td></td></tr><tr><td>如果项目属于动态链接库使用许可证库 项目不用开源</td><td></td><td></td><td>✅</td><td></td></tr><tr><td>许可证代码在单独文件中 新增其他文件可以不开源</td><td></td><td></td><td></td><td>✅</td></tr></tbody></table><h3 id="前端项目的开源协议" tabindex="-1">前端项目的开源协议 <a class="header-anchor" href="#前端项目的开源协议" aria-label="Permalink to &quot;前端项目的开源协议&quot;">​</a></h3><p>目前前端项目普遍会选择 MIT 协议。</p><ul><li><p>Vue： MIT <a href="https://link.zhihu.com/?target=https%3A//github.com/vuejs/vue/blob/dev/LICENSE" target="_blank" rel="noreferrer">https://github.com/vuejs/vue/blob/dev/LICENSE</a></p></li><li><p>React：MIT <a href="https://link.zhihu.com/?target=https%3A//github.com/facebook/react/blob/master/LICENSE" target="_blank" rel="noreferrer">https://github.com/facebook/react/blob/master/LICENSE</a></p></li><li><p>Element： MIT <a href="https://link.zhihu.com/?target=https%3A//github.com/ElemeFE/element/blob/master/LICENSE" target="_blank" rel="noreferrer">https://github.com/ElemeFE/element/blob/master/LICENSE</a></p></li><li><p>Ant Design：MIT <a href="https://link.zhihu.com/?target=https%3A//github.com/ant-design/ant-design/blob/master/LICENSE" target="_blank" rel="noreferrer">https://github.com/ant-design/ant-design/blob/master/LICENSE</a></p></li></ul><p>MIT 协议是一种最简单的开源协议，只需要保留最基本的版权许可。这个时候就会有人问，为什么React 同样是MIT协议，但是听说百度要求内部全面停止使用 React 呢？这是因为 React 曾经在开源协议外还增加了附加的条款。</p><p>大概意思就是，当发生下列情况时，Facebook 有权益吊销你的 React 使用权：</p><ul><li>与 Facebook 及其附属机构发生利益冲突；</li><li>同任何一个和 Facebook 有关的组织发生了法律纠纷；</li><li>同任何与 React 有关的组织发生利益冲突。</li></ul><p>也就是说，使用 React 的项目，如果和 Facebook 有利益冲突都可能被吊销React的使用权。这个对于大厂来讲肯定不太行，后来这件事不断发酵，开源社区在更多的 Facebook 开源项目中发现了类似的规定，开发者普遍认为这种许可证模式正在毒害社区。 不过 Facebook 最后还是意识到了这个问题，修改了开源协议。</p><h3 id="如何选择开源协议" tabindex="-1">如何选择开源协议？ <a class="header-anchor" href="#如何选择开源协议" aria-label="Permalink to &quot;如何选择开源协议？&quot;">​</a></h3><p>看了这么多对比列表，可能有点眼花。</p><p>Github 专门发布了一个网站 叫做 <strong><a href="https://choosealicense.com/" target="_blank" rel="noreferrer">Choose an open source license</a></strong> 可以帮助你简化判断。</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/34f49c01f65a43a78f9b6bd37c0e396d~tplv-k3u1fbpfcp-zoom-1.image" alt="img"></p><p>这个网站主张让开发者从自己的目的出发选择许可证。详细如下：</p><ul><li><p>需要简单宽松的协议： MIT 协议</p><ul><li>代表项目： Vue 、React 、Element</li></ul></li><li><p>比较关心专利： Apache协议</p><ul><li>代表项目： Apache、SVN</li></ul></li><li><p>比较关心项目的共享改进: GPL</p><ul><li>代表项目： Linux 、Git</li></ul></li><li><p>非代码项目： CCreative Commons</p><ul><li>署名： 必须提到作者</li><li>非商业用户</li><li>禁止演绎，禁止修改原作品在创作</li></ul></li></ul><p>作为一个以教学为目的的项目，而且是前端项目，这里我们选择较为宽松的 MIT 协议就可以了。</p><h3 id="在-github-中添加开源许可证" tabindex="-1">在 Github 中添加开源许可证 <a class="header-anchor" href="#在-github-中添加开源许可证" aria-label="Permalink to &quot;在 Github 中添加开源许可证&quot;">​</a></h3><p>在Github 中已经添加了各种开源许可证的模版。在创建项目的时候可以直接选择对应的开源协议。</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/6e9b2db05603449081d5444cbb960518~tplv-k3u1fbpfcp-zoom-1.image" alt="img"></p><p>当然也可以后期添加和修改，下面就在组件库添加上开源协议。</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/dd4673b12ecc40d09c94dcb3a2e0eb11~tplv-k3u1fbpfcp-zoom-1.image" alt="img"></p><p>其实开源许可证就是一个文本文件放在项目的根目录下，所以可以在根目录下点击 【Add file】选择 【Create new file】。</p><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/ae86429e77cb401694a3e41529fe24fc~tplv-k3u1fbpfcp-zoom-1.image" alt="img"></p><p>然后填入文件名 【 LICENSE 】，Github 会自动判断出你需要添加开源协议的，并且会显示 【 CHoose a license template 】选择许可证模版按钮，点击按钮就可以选择你需要的模版了。</p><p>然后是有效期和作者全名。</p><ul><li>有效期填写： 2022 - present</li><li>作者全名还是有点讲究的 可以把你的中文名字和英文名字做一个混合填写，比如 ： Ran (Joseph) Xia</li></ul><p><img src="https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/fe4c83a22d994cfda520a90866a9592d~tplv-k3u1fbpfcp-zoom-1.image" alt="img"></p><p>添加完成后，点击 Review and Submit 就可以创建属于自己的许可证了。</p><h2 id="复盘" tabindex="-1">复盘 <a class="header-anchor" href="#复盘" aria-label="Permalink to &quot;复盘&quot;">​</a></h2><p>这节课的目的是带大家了解开源许可证，并且选择符合自己需要的开源许可证。开源许可证有很多不同的分类，应该根据不同的项目特点选择合理的开源许可证，也应该在为自己的项目挑选开源库的时候注意许可证分类，以免引起不必要的版权麻烦。</p><p>最后留一些思考题帮助大家复习，也欢迎大家在评论区讨论。</p><ul><li>开源许可证的分类都有哪些 ？</li><li>哪种许可证的项目不允许修改后闭源？</li><li>如何在Github中创建许可证？</li></ul><p>下节课，我们讲如何发布自己的组件库，下节课见。</p>',51),r=[l];function p(o,h,c,s,b,n){return a(),e("div",null,r)}const f=t(d,[["render",p]]);export{m as __pageData,f as default};
